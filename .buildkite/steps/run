#!/bin/bash

set -e

buildkite-agent artifact download skipped.json .

# We set BUILDKITE_SPLITTER_IDENTIFIER to ensure that the Buildkite 
# uniquely caches each splitting step, i.e. 1 test plan for the unit tests
# and 1 test plan for the acceptance tests.
export BUILDKITE_SPLITTER_IDENTIFIER="${BUILDKITE_BUILD_ID}_${BUILDKITE_STEP_ID}"
export BUILDKITE_ANALYTICS_TOKEN=$(buildkite-agent secret get SUITE_TOKEN)
export BUILDKITE_SPLITTER_API_ACCESS_TOKEN=$(buildkite-agent secret get API_ACCESS_TOKEN)
export BUILDKITE_ORGANIZATION_SLUG="test-analytics-sandbox"
export BUILDKITE_SPLITTER_SUITE_SLUG="rspec-example"
export BUILDKITE_SPLITTER_TEST_CMD="bundle exec rspec {{testExamples}} --tag ~@quarantine"

docker build -t app --load .
docker run \
  --env BUILDKITE_SPLITTER_TEST_CMD \
  --env BUILDKITE_ANALYTICS_TOKEN \
  --env BUILDKITE_ORGANIZATION_SLUG \
  --env BUILDKITE_SPLITTER_SUITE_SLUG \
  --env BUILDKITE_SPLITTER_API_ACCESS_TOKEN \
  --env BUILDKITE_BUILD_ID \
  --env BUILDKITE_BUILD_NUMBER \
  --env BUILDKITE_JOB_ID \
  --env BUILDKITE_BRANCH \
  --env BUILDKITE_COMMIT \
  --env BUILDKITE_MESSAGE \
  --env BUILDKITE_BUILD_URL \
  --env BUILDKITE_PARALLEL_JOB \
  --env BUILDKITE_PARALLEL_JOB_COUNT \
  --env BUILDKITE_SPLITTER_TEST_FILE_PATTERN \
  --env BUILDKITE_SPLITTER_IDENTIFIER \
  -it --rm app sh -c "test-splitter"
